/
|--- GET(serve static from /client)

+--- /signup
    |
    +--- /user
        |--- GET (served statically)
        |___ POST -> success: /signin | failure: /signup (TODO: should signup allow a post of user image on signup)
    |
    +--- /group
        |--- GET (served statically)
        |___ POST -> success: /signin | failure: /signup
|
+--- /signin
    |
    +--- /user
        |--- GET (served statically)
        |___ POST -> success: /signin | failure: /signup
    |
    +--- /group
        |--- GET (served statically)
        |___ POST -> success: /signin | failure: /signup

|
+--- /profile
    |
    +--- /users
        |___ GET
        |
        +--- /:id
            |--- GET
            |___ PUT (TODO: allow update of user image ) - session required, will allow updates to any attributes as described in schema
            |
            +--- characterProfiles
                |--- GET
                |___ POST - session required, will post to any attributes described in database schema.
                |
                +--- /:id
                    |--- GET
                    |--- DELETE //TODO: Create route
                    |___ PUT - session required, will allow update to any attributes as described database schema
            |
            +--- photos
                |___ POST {userPhoto: [form-data]}
    |
    +--- /groups
        |___ GET

        +--- /photos
            |___ POST {userPhoto: [form-data]}
        |
        +--- /:id
            |--- GET
            |___ PUT - session required
            |
            +--- groupProfiles
                |--- GET
                |___ POST - session required, will post to any attributes described in database schema.
                |
                +--- /:id
                    |--- GET
                    |--- DELETE //TODO
                    |___ PUT - session required

    |
    +--- /characterProfiles
        |___ GET
            |___ (query parameters: searches greater than given DPS, duration of time, and any other matching attributes described in schema)
                |--- dps
                |--- startTime
                |--- endTime
                +--- user
        |
        +---/:id
            |___ GET
            |
            +--- /messages
                |
                +--- POST - {message: {
                                content: [message],
                                type: [user|group],
                                typeId: [user|group ID]}}
    |
    +---- /groupProfiles
        |___ GET
            |___ (query parameters: searches greater than given DPS, duration of time, and any other matching attributes described in schema)
                |--- dps
                |--- startTime
                |--- endTime
                +--- group
        |
        +---/:id
            |___ GET
            |
            +--- /messages
                |
                +--- POST - {message: {
                                content: [message],
                                type: [user|group],
                                typeId: [user|group ID]}}

|
+--- /logout
    |___ GET -> success: / | failure: /
